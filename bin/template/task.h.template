/******************************************************************************
	* Copyright (C) by Enginuity Inc. - All Rights Reserved
	* Unauthorized copying of this file, via any medium is strictly prohibited
	* Proprietary and confidential
	* Written by __USER, __DATE
******************************************************************************/
/**
 *******************************************************************************
 * @file    comms.h
 * project 
 * @author  __USER
 * @version V0.1
 * @date    __DATE
 * @brief   COMMS.
 *
 ******************************************************************************
 * @attention
 *
 * (C) Copyright 2019 Enginuity Inc.
 ******************************************************************************
 *
 */

#ifndef COMMS_INCLUDED
#define COMMS_INCLUDED

//******************************************************************************
// Include files.

//******************************************************************************
// Macros and typedefs.

//******************************************************************************
// COMMS Queue messages
//! queue messages.
typedef enum
{
    QMSG_COMMS_BUSY,        //! Busy
    QMSG_COMMS              //! Other messages
} _queue_msg_comms_e;

//******************************************************************************
//! COMMS state machine
//!
//!   +-----------------------+
//!   | COMMS_STATE_INIT      |<------+
//!   | ---------------       |       |
//!   | + Method              |       |
//!   |                       |       |
//!   +-----------------------+       |
//!             |                     |
//!             | QMSG_COMMS_         |
//!             |                     |
//!             V                     |
//!   +-----------------------+       |
//!   | COMMS_STATE_DEINIT    |       |
//!   | ---------------       |       |
//!   | + Method              |       |
//!   |                       |       |
//!   +-----------------------+       |
//!             |                     |
//!             | QMSG_COMMS_         |
//!             |                     |
//!             |                     |
//!             V                     |
//!   +-----------------------+       |
//!   | COMMS_STATE_ERROR     |       |
//!   | ---------------       |       |
//!   | + Method              |       |
//!   |                       |       |
//!   +-----------------------+       |
//!             |                     |
//!             | QMSG_COMMS_         |
//!             |                     |
//!             V                     |
//!   +-----------------------+       |
//!   | COMMS_STATE_OFF       |       |
//!   | ---------------       |       |
//!   | + Method              |       |
//!   |                       |       |
//!   |                       |       |
//!   |                       |       |
//!   +-----------------------+       |
//!             |                     |
//!             |                     |
//!             +---------------------+
typedef enum
{
    COMMS_STATE_INIT = 1,
    COMMS_STATE_DEINIT,
    COMMS_STATE_ERROR,
    COMMS_STATE_OFF
} _state_comms_e;

//******************************************************************************
// Module variables
#ifdef COMM_C
//******************************************************************************
//! COMMS debugging
_id_string_t gv_commsStateNames[] =
{
    {.id = 0,                          .pName = "COMMS_STATE_UNDEFINED" },
    {.id = COMMS_STATE_INIT,           .pName = "COMMS_STATE_INIT"      },
    {.id = COMMS_STATE_DEINIT,         .pName = "COMMS_STATE_DEINIT"    },
    {.id = COMMS_STATE_ERROR,          .pName = "COMMS_STATE_ERROR"     },
    {.id = COMMS_STATE_OFF,            .pName = "COMMS_STATE_OFF"       },
    {.pName = NULL        }
};
#else
_id_string_t gv_commsStateNames[];
#endif

//******************************************************************************
// Functions.
void comms_task(void *vParam);

#endif
